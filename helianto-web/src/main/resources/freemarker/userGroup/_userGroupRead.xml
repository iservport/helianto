<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
        parent="_menu">

	<secured attributes="ROLE_ADMIN, ROLE_USER" />
	
	<persistence-context />

    <input name="userGroup" />
    
	<on-start>
		<set name="flowScope.basePath" value="'userGroup/'" />
		<set name="flowScope.assign"   value="'assign'" />
		<evaluate expression="userModelBuilder.createFormModel(flowScope, currentUser.principal)" />
	</on-start>
	
	<action-state id="service.filter">
		<evaluate expression="serviceAction.filter(flowScope, currentUser.principal)" />
		<transition on="success" to="userGroupRole.filter" />
	</action-state>
	
	<action-state id="userGroupRole.filter">
		<evaluate expression="userGroupRoleAction.filter(flowScope, currentUser.principal)" />
		<transition on="success" to="show.view" />
	</action-state>
	
	<view-state id="show.view" view="/frame2" model="userModel">

		<on-render>
			<set name="viewScope.template" value="'userGroup'" />
			<set name="viewScope.sidebar"  value="'userGroup_bar'" />
			<set name="viewScope.siderel"  value="'userGroup_rel'" />
		</on-render>

		<transition on="edit"
		            to="userGroup.subflow" />
		
		<transition on="selectUserRole"
		            to="userGroupRole.subflow" >
				<set name="flowScope.userRole"  value="userModel.pages['userRole'].item"/>
			</transition>
		
		<transition on="selectService"
		            to="createUserGroupRole" >
				<set name="flowScope.service"  value="userModel.pages['service'].item"/>
			</transition>
		
		<transition on="addNature"
		            to="show.view" >
				<evaluate expression="userGroupAction.store(flowScope)" />
			</transition>
		
		<transition on="toSelection"        to="toCommit"/>
		
	</view-state>
	
	<subflow-state id="userGroup.subflow" subflow="_userGroup">
		<input name="userGroup" />
		<output name="userGroup" value="flowScope.userGroup" />
		<transition on="toCommit" to="service.filter" />
		<transition on="toReturn" to="show.view" />
	</subflow-state>

	<action-state id="createUserGroupRole">
		<evaluate expression="userGroupRoleAction.create(flowScope, currentUser.principal)" />
		<transition on="success"  to="userGroupRole.subflow" />
	</action-state>
	
	<subflow-state id="userGroupRole.subflow" subflow="_userRole">
		<input name="userGroup" value="flowScope.userGroup"/>
		<input name="userRole"  value="flowScope.userRole"/>
		<output name="userGroup" value="flowScope.userGroup"/>
		<output name="userRole"  value="flowScope.userGroupRole"/>
		<transition on="toCommit" to="service.filter" />
		<transition on="toReturn" to="group.view" />
	</subflow-state>

	<end-state id="toCommit" commit="true" />

</flow>