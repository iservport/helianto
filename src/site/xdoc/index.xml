<?xml version="1.0"?>
<!--
	Copyright 2005 I Serv Consultoria Empresarial Ltda.
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<document>

	<properties>
		<title>Welcome to the Helianto Project</title>
	</properties>

	<body>
		<section name="Welcome to the Helianto Project">

			<p>
				Helianto project is about productivity in Java development, specially for 
				very small teams (3-4 individuals). 
				It is conceived to provide a shorter development time per interaction
				accross the cycle of any agile web application creation.
				Here is a list of possible impacts organized by application layer:
			</p>
			<ol>
			<li>Persistence layer: <b>dramatically reduced demand for sql coding</b> as almost 
			any query is transparently created by ORM. Please, check the documentation to see
			how special classes called filters work with ORM-persitent classes to constraint selection from the
			database. 
			</li>
			<li>Service layer: <b>common service interfaces</b> provided, including
			transaction management features, <b>made easy to extend</b> mostly because of Spring framework 
			dependency injection wide adoption. For example, developers may choose either to call ready to use security management
			methods (closely related to org.springframework.security approaches) or to implement their own. This is also
			valid for customers, documents, processes and much more.
			</li>
			<li>Application layer: provides a set of abstract classes to
			build a solid presentation logic based on org.springframework.webflow.
			</li>
			<li>Presentation layer: although it is not part of the project goals, a couple views based
			on freemarker is available.
			</li>
			<li>Domain abstraction: <b>common domain abstraction</b> is designed to provide flexibility to fit a variety
			of business models, <b>made easy to extend</b> mostly because of JPA annotations. There is no need to issue 
			sql dml code.
			</li>
			</ol>
			<p>
				Goals are consistent with the mission statement (see
				the <a href="http://200.175.198.24/helianto/">reference guide</a>).
			</p>
			<p>
				Please, check this <a href="http://sourceforge.net/apps/wordpress/helianto/">blog</a>
				 to see the motivations behind the project development.
			</p>

			<subsection name="Project Status">

				<p>Helianto project is currently "work in progress".</p>

			</subsection>

		</section>
	</body>
</document>
