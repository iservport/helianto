<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
	<!--
 Copyright 2005 I Serv Consultoria Empresarial Ltda.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
		-->
<hibernate-mapping default-lazy="false">
	<class table="core_locale" 
		name="org.helianto.core.Locale">
		<!-- 
				LOCALE
				============================================= 
		-->
		<meta attribute="class-description" inherit="false">
				<![CDATA[
<p>
A domain object to hold support information for languages and
countries.
</p>

<p>
In Java, a <code>java.util.Locale</code> can represent either a 
language, a country, or a combination of language and country. Java 
locale constructors take string literals, standardized by ISO 639 
and ISO 3166, like "en" or "BR".
</p>

<p>
This class holds the same standardized literals, that can be 
therefore used to build a Java <code>java.util.Locale</code>. 
It also stores a self reference in the field <code>parent</code> 
to allaw the service layer to look up a singly-rooted tree for 
defaults.
</p>

@author Mauricio Fernandes de Castro
@version $Id$
@see java.util.Locale
				]]>
		</meta>
		<!-- 
  				id
		-->
		<id name="id" type="int" unsaved-value="null">
			<generator class="native"/>
		</id>
		<!-- 
				parent 
		-->
		<many-to-one name="parent" 
			class="org.helianto.core.Locale" >
			<column name="parentId" not-null="false"/>
		</many-to-one>
		<!-- 
				language (unique)
		-->
		<property name="language" type="string">
			<column name="language" length="2" not-null="true" 
				unique="true"/>
		</property>
		<!-- 
				country (unique)
		-->
		<property name="country" type="string">
			<column name="country" length="2" not-null="true" 
				unique="true"/>
		</property>
		<!-- 
				locale type
		-->
		<property name="localeType" type="char" 
			not-null="true"/>
	</class>
</hibernate-mapping>