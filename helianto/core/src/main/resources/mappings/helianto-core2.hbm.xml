<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN" 
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
	<!--

 Copyright 2005 I Serv Consultoria Empresarial Ltda.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
		
	Hibernate mapping
		
		-->
<hibernate-mapping default-lazy="false">
	<class table="core_entity" discriminator-value="0"
		name="org.helianto.core.Entity">
		<!-- 
				ENTITY
				============================================= 
		-->
		<meta attribute="class-description" inherit="false">
				<![CDATA[
<p>
Domain object to represent different business units.
</p>

<p>
For example, if two equipment sets must be kept in different 
logical spaces to avoid identity collision, they
must be tied to different entities. This is also applicable for many
ohter domain classes, like accounts, statements, parts, processes, etc.
The <code>Entity</code> is the root for many of such objects and allow
for the desirable isolation between two or more organizations, or even
smaller units within one organization. In other words, an <code>Entity</code>
'controls' a whole group of domain object instances, or if there is only one,
it controls the whole application.
</p>

<p>
A real world entity usually has many related properties, like 
address or trade mark. An <code>Entity</code> here, though, is 
designed not to hold much information, namely only an unique 
alias and a reference to its <code>Supervisor</code>. That makes 
it flexible enough to be associated to virtually any real world 
entity, even individuals. 
</p>

<p>
A small footprint is also desirable for some serialization strategies
like Hibernate's (www.hibernate.org) non-lazy loading.
</p>

@author Mauricio Fernandes de Castro
@version $Id$
				]]>
		</meta>
		<!-- 
  				id
		-->
		<id name="id" type="long" unsaved-value="null">
			<generator class="native"/>
		</id>
		<discriminator column="type" type="int"/>
		<!-- 
				supervisor
		-->
		<many-to-one name="supervisor" 
			class="org.helianto.core.Supervisor" cascade="merge">
			<column name="supervisorId" not-null="true" 
				unique-key="unique1"/>
		</many-to-one>
		<!-- 
				alias
		-->
		<property name="alias" type="string">
			<column name="alias" length="20" not-null="true" 
				unique-key="unique1"/>
		</property>
		<!-- 
				subclass to provide address information
		-->
		<subclass discriminator-value="1"
			name="org.helianto.core.AddressableEntity">
		<!-- 
				ADDRESSABLE ENTITY
				============================================= 
		-->
			<meta attribute="class-description" inherit="false">
					<![CDATA[
<p>
Domain object to extend <code>Entity</code> with address
information.
</p>

@author Mauricio Fernandes de Castro
@version $Id$
				]]>
			</meta>
			<!-- 
				address 1
			-->
			<property name="entityAddress1" type="string" length="64"/>
			<!-- 
				address 2
			-->
			<property name="entityAddress2" type="string" length="64"/>
			<!-- 
				city name
			-->
			<property name="entityCityName" type="string" length="64"/>
			<!-- 
				province name
			-->
			<property name="entityProvinceName" type="string" length="64"/>
			<!-- 
				postal code
			-->
			<property name="entityPostalCode" type="string" length="10"/>
			<!-- 
				sub class to provide business information
			-->
			<subclass discriminator-value="2"
				name="org.helianto.core.Organization">
			<!-- 
				ORGANIZATION
				============================================= 
			-->
				<meta attribute="class-description" inherit="false">
					<![CDATA[
<p>
Domain object to extend <code>AddressableEntity</code> as an
organization.
</p>

@author Mauricio Fernandes de Castro
@version $Id$
				]]>
				</meta>
				<!-- 
				business name
				-->
				<property name="businessName" type="string" length="64"/>
			</subclass>
			<!-- 
				sub class to provide individual information
			-->
			<subclass discriminator-value="3"
				name="org.helianto.core.Individual">
			<!-- 
				INDIVIDUAL
				============================================= 
			-->
				<meta attribute="class-description" inherit="false">
					<![CDATA[
<p>
Domain object to extend <code>AddressableEntity</code> as an
individual
</p>

@author Mauricio Fernandes de Castro
@version $Id$
				]]>
				</meta>
				<!-- 
				credential name
				-->
				<property name="credentialName" type="string" length="64"/>
			</subclass>
		</subclass>
	</class>
</hibernate-mapping>